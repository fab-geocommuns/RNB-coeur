name: tests

on:
  pull_request:
    branches: [develop]

jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python: [3.8]
    steps:
      - uses: actions/checkout@v3
      - name: Build & run docker
        env:
          SOURCE_DIR: /usr/src/source_data
          DEBUG: 1
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DJANGO_ALLOWED_HOST: localhost 127.0.0.1 [::1]
          DJANGO_CSRF_TRUSTED_ORIGINS: http://127.0.0.1
          DJANGO_CORS_ALLOWED_ORIGINS:  http://127.0.0.1:5500
          SQL_ENGINE: django.contrib.gis.db.backends.postgis
          SQL_HOST: db
          SQL_PORT: 5432
          DJANGO_SUPERUSER_PASSWORD: 1234
          SQL_NAME: postgres
          SQL_USER: postgres
          SQL_PASSWORD: postgres
          POSTGRES_NAME: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          CELERY_BROKER_URL:  'amqp://guest:guest@rabbitmq//'
          CELERY_RESULT_BACKEND:  'redis://redis:6379/0'
          DOWNLOAD_DIR:  '/data/downloads'
          MIN_BDG_AREA:  5
          DEFAULT_SRID:  2154
        run: docker-compose -f docker-compose.test.yml up -d --build
      - name: Install tests dependencies
        run: |
          docker-compose -f docker-compose.test.yml exec -T web python -m pip install --upgrade pip    
          docker-compose -f docker-compose.test.yml exec -T web pip install pytest --upgrade
          docker-compose -f docker-compose.test.yml exec -T web pip install coverage --upgrade       
      - name: Run docker test
        run:  docker-compose -f docker-compose.test.yml exec -T web pytest /app/tests/
