version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: app_web
    ports:
      - '8000:8000'
      - '8888:8888'
    env_file:
      - ./.env.db_auth.dev
      - ./.env.app.dev
      - ./.env.worker.dev
      - ./.env.rnb.dev
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/app
      - ./source_data:/data/downloads
    depends_on:
      - db
      - rabbitmq
    container_name: web
  db:
    image: postgis/postgis:14-master
    platform: linux/amd64
    shm_size: 1gb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env.db_auth.dev
    ports:
      - "5432:5432"
  worker:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: app_worker
    command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery -A app worker --loglevel=INFO --concurrency=6
    env_file:
      - ./.env.db_auth.dev
      - ./.env.app.dev
      - ./.env.worker.dev
      - ./.env.rnb.dev
      - ./.env.s3_backup.dev
    volumes:
      - ./app:/app
      - ./source_data:/data/downloads
    depends_on:
      - db
      - rabbitmq
    restart: unless-stopped
    container_name: worker
  rabbitmq:
    restart: unless-stopped
    image: rabbitmq:3.9-alpine
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  blackd:
    restart: always
    image: docker.io/pyfound/black
    command: blackd --bind-host 0.0.0.0 --bind-port 45484
    ports:
      - "45484:45484"
  flower:
    image: mher/flower
    container_name: flower
    command: celery flower --url_prefix=flower # This will execute flower.
    env_file:
      - ./.env.worker.dev
    ports:
      - 5555:5555 # docker will expose this ports for flower
volumes:
  postgres_data:
  rabbitmq_data:
