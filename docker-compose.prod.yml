services:
  web:
    build: ./app
    restart: unless-stopped
    ports:
      - '8000:8000'
    env_file:
      - ./.env.db_auth.prod
      - ./.env.app.prod
      - ./.env.rnb.prod
      - ./.env.worker.prod
    command: gunicorn app.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./app:/app
      - ./source_data:/home/app/source_data
    environment:
      - VIRTUAL_HOST=rnb-api.donatello.dev
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=rnb-api.donatello.dev
  nginx-proxy:
    container_name: nginx-proxy
    build: ./nginx
    restart: unless-stopped
    ports:
      - 443:443
      - 80:80
    depends_on:
      - web
    volumes:
      - certs:/etc/nginx/certs
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: unless-stopped
    env_file:
      - ./.env.nginx-encrypt.prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy
  worker:
    build: ./worker
    command: celery -A tasks worker --loglevel=INFO
    volumes:
      - ./worker:/worker
      - ./source_data:/data/downloads
    env_file:
      - ./.env.db_auth.prod
      - ./.env.worker.prod
      - ./.env.rnb.prod
    depends_on:
      - rabbitmq
    restart: unless-stopped
  rabbitmq:
    restart: unless-stopped
    image: rabbitmq:3.9-alpine
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
volumes:
  certs:
  vhost:
  acme:
  html:
  rabbitmq_data: