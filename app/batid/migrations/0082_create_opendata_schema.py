# Generated by Django 4.1.13 on 2024-05-06 15:44

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('batid', '0081_buildingaddressesreadonly_building_addresses_id_and_more'),
    ]

    operations = [
        migrations.RunSQL(
            """CREATE SCHEMA IF NOT EXISTS opendata;

            DROP VIEW IF EXISTS opendata.rnb_compact;

            CREATE OR REPLACE VIEW opendata.rnb_compact AS 
            SELECT bat.rnb_id, ST_AsText(bat.point) AS geom, ST_AsText(bat.shape) AS bati, bat.ext_ids AS external_ids, 
            json_agg(
                concat_ws(' ', 
                    NULLIF(addr.street_number, ''), 
                    NULLIF(addr.street_rep, ''), 
                    NULLIF(addr.street_type, ''), 
                    NULLIF(addr.street_name, ''), 
                    NULLIF(addr.city_zipcode, ''), 
                    NULLIF(addr.city_name, '')
                )
            ) AS addresses, 
            dept.code AS code_dept
            FROM batid_building bat
            LEFT JOIN batid_building_addresses bat_addr ON bat_addr.building_id = bat.id 
            LEFT JOIN batid_address addr ON addr.id = bat_addr.address_id
            LEFT JOIN batid_department AS dept ON ST_Intersects(dept.shape, bat.point)
            WHERE is_active
            GROUP BY bat.rnb_id, bat.point, bat.shape, bat.ext_ids, dept.code;
            """,
            reverse_sql = """DROP VIEW IF EXISTS opendata.rnb_compact;
            DROP SCHEMA IF EXISTS opendata;"""
        )
    ]
