openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/alpha/ads/:
    get:
      operationId: ads_list
      description: Mixin to log requests
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - ads
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedADSList'
          description: ''
    post:
      operationId: ads_create
      description: Mixin to log requests
      tags:
      - ads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ADS'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ADS'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ADS'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ADS'
          description: ''
  /api/alpha/ads/{file_number}/:
    get:
      operationId: ads_retrieve
      description: Mixin to log requests
      parameters:
      - in: path
        name: file_number
        schema:
          type: string
        required: true
      tags:
      - ads
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ADS'
          description: ''
    put:
      operationId: ads_update
      description: Mixin to log requests
      parameters:
      - in: path
        name: file_number
        schema:
          type: string
        required: true
      tags:
      - ads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ADS'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ADS'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ADS'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ADS'
          description: ''
    delete:
      operationId: ads_destroy
      description: Mixin to log requests
      parameters:
      - in: path
        name: file_number
        schema:
          type: string
        required: true
      tags:
      - ads
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/alpha/ads/batch/:
    post:
      operationId: ads_batch_create
      description: Mixin to log requests
      tags:
      - ads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ADS'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ADS'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ADS'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ADS'
          description: ''
  /api/alpha/buildings/:
    get:
      operationId: buildings_list
      description: Mixin to log requests
      parameters:
      - name: cursor
        required: false
        in: query
        description: The pagination cursor value.
        schema:
          type: string
      tags:
      - buildings
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBuildingList'
          description: ''
  /api/alpha/buildings/{rnb_id}/:
    get:
      operationId: buildings_retrieve
      description: Mixin to log requests
      parameters:
      - in: path
        name: rnb_id
        schema:
          type: string
        required: true
      tags:
      - buildings
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Building'
          description: ''
  /api/alpha/buildings/closest/:
    get:
      operationId: buildings_closest_retrieve
      description: Mixin to log requests
      tags:
      - buildings
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/alpha/buildings/guess/:
    get:
      operationId: buildings_guess_retrieve
      description: Mixin to log requests
      tags:
      - buildings
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/alpha/contributions/:
    post:
      operationId: contributions_create
      tags:
      - contributions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contribution'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contribution'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contribution'
      security:
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
          description: ''
  /api/alpha/login/:
    post:
      operationId: login_create
      tags:
      - login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
components:
  schemas:
    ADS:
      type: object
      properties:
        file_number:
          type: string
        decided_at:
          type: string
          format: date
        city:
          allOf:
          - $ref: '#/components/schemas/CityADS'
          readOnly: true
        buildings_operations:
          type: array
          items:
            $ref: '#/components/schemas/BuildingsADS'
      required:
      - city
      - decided_at
      - file_number
    Address:
      type: object
      properties:
        id:
          type: string
          maxLength: 40
        source:
          type: string
          maxLength: 10
        street_number:
          type: string
          nullable: true
          maxLength: 10
        street_rep:
          type: string
          nullable: true
          maxLength: 100
        street_name:
          type: string
          nullable: true
          maxLength: 100
        street_type:
          type: string
          nullable: true
          maxLength: 100
        city_name:
          type: string
          nullable: true
          maxLength: 100
        city_zipcode:
          type: string
          nullable: true
          maxLength: 5
        city_insee_code:
          type: string
          nullable: true
          maxLength: 5
      required:
      - id
      - source
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    BdgInAds:
      type: object
      properties:
        rnb_id:
          type: string
        geometry:
          type: object
          additionalProperties: {}
      required:
      - rnb_id
    Building:
      type: object
      properties:
        rnb_id:
          type: string
          maxLength: 12
        status:
          $ref: '#/components/schemas/StatusEnum'
        point:
          type: object
          additionalProperties: {}
          readOnly: true
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
          readOnly: true
        ext_ids:
          readOnly: true
      required:
      - addresses
      - ext_ids
      - point
      - rnb_id
    BuildingsADS:
      type: object
      properties:
        building:
          $ref: '#/components/schemas/BdgInAds'
        operation:
          $ref: '#/components/schemas/OperationEnum'
      required:
      - building
      - operation
    CityADS:
      type: object
      properties:
        code_insee:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 200
      required:
      - code_insee
      - name
    Contribution:
      type: object
      properties:
        rnb_id:
          type: string
          nullable: true
          maxLength: 255
        text:
          type: string
          nullable: true
    OperationEnum:
      enum:
      - build
      - modify
      - demolish
      type: string
      description: |-
        * `build` - build
        * `modify` - modify
        * `demolish` - demolish
    PaginatedADSList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ADS'
    PaginatedBuildingList:
      type: object
      properties:
        next:
          type: string
          nullable: true
        previous:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/Building'
    StatusEnum:
      enum:
      - constructionProject
      - canceledConstructionProject
      - ongoingConstruction
      - constructed
      - ongoingChange
      - notUsable
      - demolished
      type: string
      description: |-
        * `constructionProject` - En projet
        * `canceledConstructionProject` - Projet annulé
        * `ongoingConstruction` - Construction en cours
        * `constructed` - Construit
        * `ongoingChange` - En cours de modification
        * `notUsable` - Non utilisable
        * `demolished` - Démoli
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
