version: "3.9"

services:
  db:
    image: postgis/postgis:14-master
    platform: linux/amd64
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=db
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  web:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      target: app_web
    ports:
      - '8000:8000'
    environment:
      - DEBUG=1
      - DJANGO_SECRET_KEY=eTPoJ4J132rg3UhQUAYAYOGljoh6MX8V
      - DJANGO_ALLOWED_HOST=localhost 127.0.0.1 [::1]
      - DJANGO_CSRF_TRUSTED_ORIGINS=http://127.0.0.1
      - DJANGO_CORS_ALLOWED_ORIGINS=http://127.0.0.1:5500
      - DJANGO_SQL_ENGINE=django.contrib.gis.db.backends.postgis
      - DJANGO_SUPERUSER_PASSWORD=1234
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq//
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - DOWNLOAD_DIR=/data/downloads
      - MIN_BDG_AREA=5
      - DEFAULT_SRID=2154
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/app
    depends_on:
      - db
      - rabbitmq
      - redis
    container_name: web
  rabbitmq:
    restart: unless-stopped
    image: rabbitmq:3.9-alpine
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
  redis:
    image: redis:latest
    ports:
      - "6379:6379"


volumes:
  postgres_data:
  rabbitmq_data: